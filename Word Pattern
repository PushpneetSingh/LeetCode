class Solution {
public:
    bool wordPattern(string pattern, string str) {
        
        int n=pattern.size();
        
        stringstream s(str);
        vector<string> a;
        
        string help;
        while(s>>help){
            a.push_back(help);
        }
        
        if(pattern.size()!=a.size()) return 0;
        
        unordered_map<char,string> mp;
        unordered_set<string> seen;
        
        for(int i=0;i<n;i++){
            
            if(mp.find(pattern[i]) == mp.end()){
                if(seen.find(a[i]) == seen.end())
                {
                    mp[pattern[i]]=a[i];    
                    seen.insert(a[i]);
                }
                else return 0;
                
            }
            else{
                if(mp[pattern[i]] != a[i]) return 0;
            }
        }
        
        return 1;
    }
};
